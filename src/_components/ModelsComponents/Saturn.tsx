/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Freemodels (https://sketchfab.com/vivaanarora9)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/saturn-17b34b975dc3449da83f2ee7802004f3
Title: Saturn
*/

import * as THREE from 'three';
import { useRef, useState, useEffect, useMemo, type JSX } from 'react';
import { useGLTF } from '@react-three/drei';

// モデルパスを定数化
const MODEL_PATH = 'models/saturn.glb';

// 事前ロード
useGLTF.preload(MODEL_PATH);

type GLTFResult = {
  nodes: {
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
  };
  materials: {
    Saturn: THREE.MeshStandardMaterial;
    rings: THREE.MeshStandardMaterial;
  };
};

export function Saturn(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null);
  const [visible, setVisible] = useState(false);
  
  // 遅延ロードでパフォーマンス向上
  useEffect(() => {
    // コンポーネントがマウントされた後に表示
    const timer = setTimeout(() => setVisible(true), 100);
    return () => clearTimeout(timer);
  }, []);
  
  // モデルのロードを遅延表示後に行う
  const { nodes, materials } = useGLTF(MODEL_PATH) as unknown as GLTFResult;
  
  // マテリアルを最適化
  const optimizedMaterials = useMemo(() => {
    if (!materials.Saturn || !materials.rings) return null;
    
    // Saturn本体のマテリアル最適化
    const saturnMaterial = materials.Saturn.clone();
    saturnMaterial.roughness = 0.7;
    saturnMaterial.metalness = 0.1;
    saturnMaterial.envMapIntensity = 0.4;
    
    // リングのマテリアル最適化
    const ringsMaterial = materials.rings.clone();
    ringsMaterial.roughness = 0.9;
    ringsMaterial.metalness = 0.0;
    ringsMaterial.envMapIntensity = 0.3;
    ringsMaterial.transparent = true;
    ringsMaterial.opacity = 0.8;
    
    return {
      saturn: saturnMaterial,
      rings: ringsMaterial
    };
  }, [materials]);
  
  // 表示されていない場合は何もレンダリングしない
  if (!visible) return null;
  
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={1.758}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-0.419, Math.PI / 2, 0]}>
            <mesh 
              geometry={nodes.Object_4.geometry} 
              material={optimizedMaterials?.saturn || materials.Saturn}
              frustumCulled={true}
            />
            <mesh 
              geometry={nodes.Object_5.geometry} 
              material={optimizedMaterials?.rings || materials.rings}
              frustumCulled={true}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

// 下位互換性のためのエクスポート
export { Saturn as Model };